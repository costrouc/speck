"use strict";function _defineProperty(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e,t){"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?t():"function"==typeof define&&define.amd?define(t):t()}(void 0,function(){function e(){var e=new pe(9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e}function t(e,t){var o=t[0],n=t[1],a=t[2],r=t[3],s=t[4],i=t[5],l=t[6],u=t[7],m=t[8],c=t[9],f=t[10],d=t[11],v=t[12],b=t[13],p=t[14],h=t[15],x=o*i-n*s,S=o*l-a*s,M=o*u-r*s,y=n*l-a*i,F=n*u-r*i,D=a*u-r*l,g=m*b-c*v,I=m*p-f*v,_=m*h-d*v,R=c*p-f*b,A=c*h-d*b,w=f*h-d*p,U=x*w-S*A+M*R+y*_-F*I+D*g;return U?(U=1/U,e[0]=(i*w-l*A+u*R)*U,e[1]=(a*A-n*w-r*R)*U,e[2]=(b*D-p*F+h*y)*U,e[3]=(f*F-c*D-d*y)*U,e[4]=(l*_-s*w-u*I)*U,e[5]=(o*w-a*_+r*I)*U,e[6]=(p*M-v*D-h*S)*U,e[7]=(m*D-f*M+d*S)*U,e[8]=(s*A-i*_+u*g)*U,e[9]=(n*_-o*A-r*g)*U,e[10]=(v*F-b*M+h*x)*U,e[11]=(c*M-m*F-d*x)*U,e[12]=(i*I-s*R-l*g)*U,e[13]=(o*R-n*I+a*g)*U,e[14]=(b*S-v*y-p*x)*U,e[15]=(m*y-c*S+f*x)*U,e):null}function o(e,t,o){var n=t[0],a=t[1],r=t[2],s=t[3],i=t[4],l=t[5],u=t[6],m=t[7],c=t[8],f=t[9],d=t[10],v=t[11],b=t[12],p=t[13],h=t[14],x=t[15],S=o[0],M=o[1],y=o[2],F=o[3];return e[0]=S*n+M*i+y*c+F*b,e[1]=S*a+M*l+y*f+F*p,e[2]=S*r+M*u+y*d+F*h,e[3]=S*s+M*m+y*v+F*x,S=o[4],M=o[5],y=o[6],F=o[7],e[4]=S*n+M*i+y*c+F*b,e[5]=S*a+M*l+y*f+F*p,e[6]=S*r+M*u+y*d+F*h,e[7]=S*s+M*m+y*v+F*x,S=o[8],M=o[9],y=o[10],F=o[11],e[8]=S*n+M*i+y*c+F*b,e[9]=S*a+M*l+y*f+F*p,e[10]=S*r+M*u+y*d+F*h,e[11]=S*s+M*m+y*v+F*x,S=o[12],M=o[13],y=o[14],F=o[15],e[12]=S*n+M*i+y*c+F*b,e[13]=S*a+M*l+y*f+F*p,e[14]=S*r+M*u+y*d+F*h,e[15]=S*s+M*m+y*v+F*x,e}function n(e,t,o){var n,a,r,s,i,l,u,m,c,f,d,v,b=o[0],p=o[1],h=o[2];return t===e?(e[12]=t[0]*b+t[4]*p+t[8]*h+t[12],e[13]=t[1]*b+t[5]*p+t[9]*h+t[13],e[14]=t[2]*b+t[6]*p+t[10]*h+t[14],e[15]=t[3]*b+t[7]*p+t[11]*h+t[15]):(n=t[0],a=t[1],r=t[2],s=t[3],i=t[4],l=t[5],u=t[6],m=t[7],c=t[8],f=t[9],d=t[10],v=t[11],e[0]=n,e[1]=a,e[2]=r,e[3]=s,e[4]=i,e[5]=l,e[6]=u,e[7]=m,e[8]=c,e[9]=f,e[10]=d,e[11]=v,e[12]=n*b+i*p+c*h+t[12],e[13]=a*b+l*p+f*h+t[13],e[14]=r*b+u*p+d*h+t[14],e[15]=s*b+m*p+v*h+t[15]),e}function a(e,t,o){var n=Math.sin(o),a=Math.cos(o),r=t[4],s=t[5],i=t[6],l=t[7],u=t[8],m=t[9],c=t[10],f=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=r*a+u*n,e[5]=s*a+m*n,e[6]=i*a+c*n,e[7]=l*a+f*n,e[8]=u*a-r*n,e[9]=m*a-s*n,e[10]=c*a-i*n,e[11]=f*a-l*n,e}function r(e,t,o){var n=Math.sin(o),a=Math.cos(o),r=t[0],s=t[1],i=t[2],l=t[3],u=t[8],m=t[9],c=t[10],f=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=r*a-u*n,e[1]=s*a-m*n,e[2]=i*a-c*n,e[3]=l*a-f*n,e[8]=r*n+u*a,e[9]=s*n+m*a,e[10]=i*n+c*a,e[11]=l*n+f*a,e}function s(e,t){var o,n,a,r,s,i,l,u,m,c,f=SIMD.Float32x4.load(t,0),d=SIMD.Float32x4.load(t,4),v=SIMD.Float32x4.load(t,8),b=SIMD.Float32x4.load(t,12);return s=SIMD.Float32x4.shuffle(f,d,0,1,4,5),n=SIMD.Float32x4.shuffle(v,b,0,1,4,5),o=SIMD.Float32x4.shuffle(s,n,0,2,4,6),n=SIMD.Float32x4.shuffle(n,s,1,3,5,7),s=SIMD.Float32x4.shuffle(f,d,2,3,6,7),r=SIMD.Float32x4.shuffle(v,b,2,3,6,7),a=SIMD.Float32x4.shuffle(s,r,0,2,4,6),r=SIMD.Float32x4.shuffle(r,s,1,3,5,7),s=SIMD.Float32x4.mul(a,r),s=SIMD.Float32x4.swizzle(s,1,0,3,2),i=SIMD.Float32x4.mul(n,s),l=SIMD.Float32x4.mul(o,s),s=SIMD.Float32x4.swizzle(s,2,3,0,1),i=SIMD.Float32x4.sub(SIMD.Float32x4.mul(n,s),i),l=SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,s),l),l=SIMD.Float32x4.swizzle(l,2,3,0,1),s=SIMD.Float32x4.mul(n,a),s=SIMD.Float32x4.swizzle(s,1,0,3,2),i=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,s),i),m=SIMD.Float32x4.mul(o,s),s=SIMD.Float32x4.swizzle(s,2,3,0,1),i=SIMD.Float32x4.sub(i,SIMD.Float32x4.mul(r,s)),m=SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,s),m),m=SIMD.Float32x4.swizzle(m,2,3,0,1),s=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(n,2,3,0,1),r),s=SIMD.Float32x4.swizzle(s,1,0,3,2),a=SIMD.Float32x4.swizzle(a,2,3,0,1),i=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,s),i),u=SIMD.Float32x4.mul(o,s),s=SIMD.Float32x4.swizzle(s,2,3,0,1),i=SIMD.Float32x4.sub(i,SIMD.Float32x4.mul(a,s)),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,s),u),u=SIMD.Float32x4.swizzle(u,2,3,0,1),s=SIMD.Float32x4.mul(o,n),s=SIMD.Float32x4.swizzle(s,1,0,3,2),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,s),u),m=SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,s),m),s=SIMD.Float32x4.swizzle(s,2,3,0,1),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,s),u),m=SIMD.Float32x4.sub(m,SIMD.Float32x4.mul(a,s)),s=SIMD.Float32x4.mul(o,r),s=SIMD.Float32x4.swizzle(s,1,0,3,2),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(a,s)),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,s),u),s=SIMD.Float32x4.swizzle(s,2,3,0,1),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,s),l),u=SIMD.Float32x4.sub(u,SIMD.Float32x4.mul(n,s)),s=SIMD.Float32x4.mul(o,a),s=SIMD.Float32x4.swizzle(s,1,0,3,2),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,s),l),m=SIMD.Float32x4.sub(m,SIMD.Float32x4.mul(n,s)),s=SIMD.Float32x4.swizzle(s,2,3,0,1),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(r,s)),m=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,s),m),c=SIMD.Float32x4.mul(o,i),c=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(c,2,3,0,1),c),c=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(c,1,0,3,2),c),s=SIMD.Float32x4.reciprocalApproximation(c),c=SIMD.Float32x4.sub(SIMD.Float32x4.add(s,s),SIMD.Float32x4.mul(c,SIMD.Float32x4.mul(s,s))),(c=SIMD.Float32x4.swizzle(c,0,0,0,0))?(SIMD.Float32x4.store(e,0,SIMD.Float32x4.mul(c,i)),SIMD.Float32x4.store(e,4,SIMD.Float32x4.mul(c,l)),SIMD.Float32x4.store(e,8,SIMD.Float32x4.mul(c,u)),SIMD.Float32x4.store(e,12,SIMD.Float32x4.mul(c,m)),e):null}function i(e,t,o){var n=SIMD.Float32x4.load(t,0),a=SIMD.Float32x4.load(t,4),r=SIMD.Float32x4.load(t,8),s=SIMD.Float32x4.load(t,12),i=SIMD.Float32x4.load(o,0),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(i,0,0,0,0),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(i,1,1,1,1),a),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(i,2,2,2,2),r),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(i,3,3,3,3),s))));SIMD.Float32x4.store(e,0,l);var u=SIMD.Float32x4.load(o,4),m=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,0,0,0,0),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,1,1,1,1),a),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,2,2,2,2),r),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,3,3,3,3),s))));SIMD.Float32x4.store(e,4,m);var c=SIMD.Float32x4.load(o,8),f=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,0,0,0,0),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,1,1,1,1),a),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,2,2,2,2),r),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,3,3,3,3),s))));SIMD.Float32x4.store(e,8,f);var d=SIMD.Float32x4.load(o,12),v=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(d,0,0,0,0),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(d,1,1,1,1),a),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(d,2,2,2,2),r),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(d,3,3,3,3),s))));return SIMD.Float32x4.store(e,12,v),e}function l(e,t,o){var n=SIMD.Float32x4.load(t,0),a=SIMD.Float32x4.load(t,4),r=SIMD.Float32x4.load(t,8),s=SIMD.Float32x4.load(t,12),i=SIMD.Float32x4(o[0],o[1],o[2],0);t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11]),n=SIMD.Float32x4.mul(n,SIMD.Float32x4.swizzle(i,0,0,0,0)),a=SIMD.Float32x4.mul(a,SIMD.Float32x4.swizzle(i,1,1,1,1)),r=SIMD.Float32x4.mul(r,SIMD.Float32x4.swizzle(i,2,2,2,2));var l=SIMD.Float32x4.add(n,SIMD.Float32x4.add(a,SIMD.Float32x4.add(r,s)));return SIMD.Float32x4.store(e,12,l),e}function u(e,t,o){var n=SIMD.Float32x4.splat(Math.sin(o)),a=SIMD.Float32x4.splat(Math.cos(o));t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]);var r=SIMD.Float32x4.load(t,4),s=SIMD.Float32x4.load(t,8);return SIMD.Float32x4.store(e,4,SIMD.Float32x4.add(SIMD.Float32x4.mul(r,a),SIMD.Float32x4.mul(s,n))),SIMD.Float32x4.store(e,8,SIMD.Float32x4.sub(SIMD.Float32x4.mul(s,a),SIMD.Float32x4.mul(r,n))),e}function m(e,t,o){var n=SIMD.Float32x4.splat(Math.sin(o)),a=SIMD.Float32x4.splat(Math.cos(o));t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]);var r=SIMD.Float32x4.load(t,0),s=SIMD.Float32x4.load(t,8);return SIMD.Float32x4.store(e,0,SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,a),SIMD.Float32x4.mul(s,n))),SIMD.Float32x4.store(e,8,SIMD.Float32x4.add(SIMD.Float32x4.mul(r,n),SIMD.Float32x4.mul(s,a))),e}function c(){var e=new pe(16);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function f(e){var t=new pe(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function d(e,t,o,n,a,r,s,i,l,u,m,c,f,d,v,b){var p=new pe(16);return p[0]=e,p[1]=t,p[2]=o,p[3]=n,p[4]=a,p[5]=r,p[6]=s,p[7]=i,p[8]=l,p[9]=u,p[10]=m,p[11]=c,p[12]=f,p[13]=d,p[14]=v,p[15]=b,p}function v(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function b(e,t,o,n){var a,r,s,i,l,u,m,c,f,d,v,b,p,h,x,S,M,y,F,D,g,I,_,R,A=n[0],w=n[1],U=n[2],z=Math.sqrt(A*A+w*w+U*U);return Math.abs(z)<be?null:(z=1/z,A*=z,w*=z,U*=z,a=Math.sin(o),r=Math.cos(o),s=1-r,i=t[0],l=t[1],u=t[2],m=t[3],c=t[4],f=t[5],d=t[6],v=t[7],b=t[8],p=t[9],h=t[10],x=t[11],S=A*A*s+r,M=w*A*s+U*a,y=U*A*s-w*a,F=A*w*s-U*a,D=w*w*s+r,g=U*w*s+A*a,I=A*U*s+w*a,_=w*U*s-A*a,R=U*U*s+r,e[0]=i*S+c*M+b*y,e[1]=l*S+f*M+p*y,e[2]=u*S+d*M+h*y,e[3]=m*S+v*M+x*y,e[4]=i*F+c*D+b*g,e[5]=l*F+f*D+p*g,e[6]=u*F+d*D+h*g,e[7]=m*F+v*D+x*g,e[8]=i*I+c*_+b*R,e[9]=l*I+f*_+p*R,e[10]=u*I+d*_+h*R,e[11]=m*I+v*_+x*R,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)}function p(e,t,o,n,a,r,s){var i=1/(t-o),l=1/(n-a),u=1/(r-s);return e[0]=-2*i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*u,e[11]=0,e[12]=(t+o)*i,e[13]=(a+n)*l,e[14]=(s+r)*u,e[15]=1,e}function h(e,t,o,n){var a,r,s,i,l,u,m,c,f,d,b=t[0],p=t[1],h=t[2],x=n[0],S=n[1],M=n[2],y=o[0],F=o[1],D=o[2];return Math.abs(b-y)<be&&Math.abs(p-F)<be&&Math.abs(h-D)<be?v(e):(m=b-y,c=p-F,f=h-D,d=1/Math.sqrt(m*m+c*c+f*f),m*=d,c*=d,f*=d,a=S*f-M*c,r=M*m-x*f,s=x*c-S*m,d=Math.sqrt(a*a+r*r+s*s),d?(d=1/d,a*=d,r*=d,s*=d):(a=0,r=0,s=0),i=c*s-f*r,l=f*a-m*s,u=m*r-c*a,d=Math.sqrt(i*i+l*l+u*u),d?(d=1/d,i*=d,l*=d,u*=d):(i=0,l=0,u=0),e[0]=a,e[1]=i,e[2]=m,e[3]=0,e[4]=r,e[5]=l,e[6]=c,e[7]=0,e[8]=s,e[9]=u,e[10]=f,e[11]=0,e[12]=-(a*b+r*p+s*h),e[13]=-(i*b+l*p+u*h),e[14]=-(m*b+c*p+f*h),e[15]=1,e)}function x(){var e=new pe(3);return e[0]=0,e[1]=0,e[2]=0,e}function S(e,t,o){var n=new pe(3);return n[0]=e,n[1]=t,n[2]=o,n}function M(e,t){var o=t[0]-e[0],n=t[1]-e[1],a=t[2]-e[2];return Math.sqrt(o*o+n*n+a*a)}function y(e){var t=e[0],o=e[1],n=e[2];return Math.sqrt(t*t+o*o+n*n)}function F(e,t){var o=t[0],n=t[1],a=t[2],r=o*o+n*n+a*a;return r>0&&(r=1/Math.sqrt(r),e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r),e}function D(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function g(e,t,o){var n=t[0],a=t[1],r=t[2],s=o[0],i=o[1],l=o[2];return e[0]=a*l-r*i,e[1]=r*s-n*l,e[2]=n*i-a*s,e}function I(e,t){t=t||1;var o=2*he()*Math.PI,n=2*he()-1,a=Math.sqrt(1-n*n)*t;return e[0]=Math.cos(o)*a,e[1]=Math.sin(o)*a,e[2]=n*t,e}function _(){var e=new pe(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e}function R(e,t,o,n){var a=new pe(4);return a[0]=e,a[1]=t,a[2]=o,a[3]=n,a}function A(e,t){var o=t[0],n=t[1],a=t[2],r=t[3],s=o*o+n*n+a*a+r*r;return s>0&&(s=1/Math.sqrt(s),e[0]=o*s,e[1]=n*s,e[2]=a*s,e[3]=r*s),e}function w(e,t,o){var n=t[0],a=t[1],r=t[2],s=t[3];return e[0]=o[0]*n+o[4]*a+o[8]*r+o[12]*s,e[1]=o[1]*n+o[5]*a+o[9]*r+o[13]*s,e[2]=o[2]*n+o[6]*a+o[10]*r+o[14]*s,e[3]=o[3]*n+o[7]*a+o[11]*r+o[15]*s,e}function U(){var e=new pe(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function z(e,t,o){o=.5*o;var n=Math.sin(o);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(o),e}function T(e,t,o,n){var a,r,s,i,l,u=t[0],m=t[1],c=t[2],f=t[3],d=o[0],v=o[1],b=o[2],p=o[3];return r=u*d+m*v+c*b+f*p,r<0&&(r=-r,d=-d,v=-v,b=-b,p=-p),1-r>1e-6?(a=Math.acos(r),s=Math.sin(a),i=Math.sin((1-n)*a)/s,l=Math.sin(n*a)/s):(i=1-n,l=n),e[0]=i*u+l*d,e[1]=i*m+l*v,e[2]=i*c+l*b,e[3]=i*f+l*p,e}function E(e,t){var o,n=t[0]+t[4]+t[8];if(n>0)o=Math.sqrt(n+1),e[3]=.5*o,o=.5/o,e[0]=(t[5]-t[7])*o,e[1]=(t[6]-t[2])*o,e[2]=(t[1]-t[3])*o;else{var a=0;t[4]>t[0]&&(a=1),t[8]>t[3*a+a]&&(a=2);var r=(a+1)%3,s=(a+2)%3;o=Math.sqrt(t[3*a+a]-t[3*r+r]-t[3*s+s]+1),e[a]=.5*o,o=.5/o,e[3]=(t[3*r+s]-t[3*s+r])*o,e[r]=(t[3*r+a]+t[3*a+r])*o,e[s]=(t[3*s+a]+t[3*a+s])*o}return e}function P(){var e=new pe(2);return e[0]=0,e[1]=0,e}function B(e){for(var t=e.split("\n"),o=parseInt(t[0]),n=Math.floor(t.length/(o+2)),a=[],r=0;r<n;r++){for(var s=[],i=0;i<o;i++){for(var l=t[r*(o+2)+i+2].split(/\s+/),u={},m=0;""==l[m];)m++;u.symbol=l[m++],u.position=[parseFloat(l[m++]),parseFloat(l[m++]),parseFloat(l[m++])],s.push(u)}a.push(s)}return a}function C(e,t){var o={};for(var n in t)o[n]={buffer:new X(e),size:t[n]};return o}function N(e,t){for(var o={},n=0;n<t.length;n++){var a=e.getExtension(t[n]);if(null===a)throw"Extension "+t[n]+" not available.";o[t[n]]=a}return o}function L(e,t,o,n){var a=this;a.initialize=function(){if(a.fb=e.createFramebuffer(),a.bind(),t.length>1){for(var r=[],s=0;s<t.length;s++)r.push(n["COLOR_ATTACHMENT"+s+"_WEBGL"]);n.drawBuffersWEBGL(r);for(var s=0;s<t.length;s++)e.framebufferTexture2D(e.FRAMEBUFFER,n["COLOR_ATTACHMENT"+s+"_WEBGL"],e.TEXTURE_2D,t[s].texture,0)}else e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t[0].texture,0);void 0!==o&&e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,o.texture,0)},a.bind=function(){e.bindFramebuffer(e.FRAMEBUFFER,a.fb)},a.initialize()}function O(e,t,o,n,a,r){r=r||{},r.target=r.target||e.TEXTURE_2D,r.mag=r.mag||e.NEAREST,r.min=r.min||e.NEAREST,r.wraps=r.wraps||e.CLAMP_TO_EDGE,r.wrapt=r.wrapt||e.CLAMP_TO_EDGE,r.internalFormat=r.internalFormat||e.RGBA,r.format=r.format||e.RGBA,r.type=r.type||e.UNSIGNED_BYTE;var s=this;s.initialize=function(){s.index=t,s.activate(),s.texture=e.createTexture(),s.bind(),e.texParameteri(r.target,e.TEXTURE_MAG_FILTER,r.mag),e.texParameteri(r.target,e.TEXTURE_MIN_FILTER,r.min),e.texParameteri(r.target,e.TEXTURE_WRAP_S,r.wraps),e.texParameteri(r.target,e.TEXTURE_WRAP_T,r.wrapt),e.texImage2D(r.target,0,r.internalFormat,n,a,0,r.format,r.type,o)},s.bind=function(){e.bindTexture(r.target,s.texture)},s.activate=function(){e.activeTexture(e.TEXTURE0+s.index)},s.reset=function(){s.activate(),s.bind(),e.texImage2D(r.target,0,r.internalFormat,n,a,0,r.format,r.type,o)},s.initialize()}function X(e){var t=this;t.initialize=function(){t.buffer=e.createBuffer()},t.bind=function(){e.bindBuffer(e.ARRAY_BUFFER,t.buffer)},t.set=function(o){t.bind(),e.bufferData(e.ARRAY_BUFFER,o,e.STATIC_DRAW)},t.initialize()}function H(e,t,o,n){var a=this;a.primitiveCount=n,a.initialize=function(){},a.render=function(){t.use();for(name in o){var r=o[name].buffer,s=o[name].size;try{var i=t.attribs[name].location}catch(e){throw console.log("Could not find location for",name),e}r.bind(),e.enableVertexAttribArray(i),e.vertexAttribPointer(i,s,e.FLOAT,!1,0,0)}e.drawArrays(e.TRIANGLES,0,3*n);for(name in a.buffers)e.disableVertexAttribArray(t.attributes[name].location)},a.initialize()}function W(e,t,o){var n=this;n.initialize=function(){n.program=n.compileProgram(t,o),n.attribs=n.gatherAttribs(),n.uniforms=n.gatherUniforms()},n.use=function(){e.useProgram(n.program)},n.compileProgram=function(t,o){var a=n.compileShader(t,e.VERTEX_SHADER),r=n.compileShader(o,e.FRAGMENT_SHADER),s=e.createProgram();if(e.attachShader(s,a),e.attachShader(s,r),e.linkProgram(s),!e.getProgramParameter(s,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(s)),"Failed to compile program.";return s},n.compileShader=function(t,o){var n=e.createShader(o);if(e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS)){var a=e.getShaderInfoLog(n),r=parseInt(a.split(":")[2]),s=t.split("\n");for(var i in s){var l=parseInt(i);console.log(l+"  "+s[i]),i==r-1&&console.warn(a)}var u=o==e.VERTEX_SHADER?"vertex":"fragment";throw"Failed to compile "+u+" shader."}return n},n.setUniform=function(t,o,a){var r=Array.prototype.slice.call(arguments,2);n.use();try{var s=n.uniforms[t].location}catch(e){throw console.log(t),e}e["uniform"+o].apply(e,[s].concat(r))},n.gatherUniforms=function(){for(var t={},o=e.getProgramParameter(n.program,e.ACTIVE_UNIFORMS),a=0;a<o;a++){var r=e.getActiveUniform(n.program,a);t[r.name]={name:r.name,location:e.getUniformLocation(n.program,r.name),type:r.type,size:r.size}}return t},n.gatherAttribs=function(){for(var t={},o=e.getProgramParameter(n.program,e.ACTIVE_ATTRIBUTES),a=0;a<o;a++){var r=e.getActiveAttrib(n.program,a);t[r.name]={name:r.name,location:e.getAttribLocation(n.program,r.name),type:r.type,size:r.size}}return t},n.initialize()}function q(e){e=e||{};for(var t=1;t<arguments.length;t++)if(arguments[t])for(var o in arguments[t])arguments[t].hasOwnProperty(o)&&(e[o]=arguments[t][o]);return e}function G(e,t,o){var n=new XMLHttpRequest;n.open("GET",e,!0),n.onload=function(){n.status>=200&&n.status<400?t(n.responseText):o()},n.onerror=function(){throw"Connection Error for ajax get request"},n.send()}function V(e,t,o){return Math.min(t,Math.max(e,o))}function j(){return q({aspect:1,zoom:.125,translation:{x:0,y:0},rotation:c(),resolution:400},Re.atoms)}function Y(e,t){for(var o=-(1/0),n=1/0,a=-(1/0),r=1/0,s=0;s<t.atoms.length;s++){var i=t.atoms[s],l=Oe[i.symbol].radius;l=2.5*e.atomScale*(1+(l-1)*e.relativeAtomScale);var u=R(i.x,i.y,i.z,0);w(u,u,e.rotation),o=Math.max(o,u[0]+l),n=Math.min(n,u[0]-l),a=Math.max(a,u[1]+l),r=Math.min(r,u[1]-l)}var m=n+(o-n)/2,c=r+(a-r)/2;e.translation.x=m,e.translation.y=c;var f=Math.max(o-n,a-r);e.zoom=1/(1.01*f)}function k(e){return Z(K(e))}function K(e){return JSON.stringify(e)}function Z(e){return e=JSON.parse(e),e.rotation=f(e.rotation),e}function J(e){e.dofStrength=V(0,1,e.dofStrength),e.dofPosition=V(0,1,e.dofPosition),e.zoom=V(.001,2,e.zoom),e.atomScale=V(0,1,e.atomScale),e.relativeAtomScale=V(0,1,e.relativeAtomScale),e.bondScale=V(0,1,e.bondScale),e.bondShade=V(0,1,e.bondShade),e.atomShade=V(0,1,e.atomShade),e.ao=V(0,1,e.ao),e.brightness=V(0,1,e.brightness),e.outline=V(0,1,e.outline)}function Q(e,t,o){e.translation.x-=t/(e.resolution*e.zoom),e.translation.y+=o/(e.resolution*e.zoom),J(e)}function $(e,t,o){var n=c();Ie(n,n,.005*t),ge(n,n,.005*o),Fe(e.rotation,n,e.rotation),J(e)}function ee(e){var t=1/e.zoom,o=t/e.aspect,n=-o/2+e.translation.y,a=o/2+e.translation.y,r=-t/2+e.translation.x,s=t/2+e.translation.x;return{bottom:n,top:a,left:r,right:s}}function te(e){return e.bondScale*e.atomScale*(1+(Xe-1)*e.relativeAtomScale)}function oe(){return{atoms:[],farAtom:void 0,bonds:[],lattice:{}}}function ne(e){function t(t,o){e.lattice.edges.push({posA:{x:t[0],y:t[1],z:t[2]},posB:{x:o[0],y:o[1],z:o[2]},radA:r,radB:r,colA:{r:a[0],g:a[1],b:a[2]},colB:{r:a[0],g:a[1],b:a[2]},cutoff:1})}function o(t){e.lattice.points.push({position:t,color:a,radius:r})}var n=e.lattice.matrix,a=[.1,.1,.1],r=.03;e.lattice.edges=[],e.lattice.points=[];var s=[n[3],n[7],n[11]],i=S(0+s[0],0+s[1],0+s[2]),l=S(n[0]+s[0],n[1]+s[1],n[2]+s[2]),u=S(n[4]+s[0],n[5]+s[1],n[6]+s[2]),m=S(n[8]+s[0],n[9]+s[1],n[10]+s[2]),c=S(n[0]+n[4]+s[0],n[1]+n[5]+s[1],n[2]+n[6]+s[2]),f=S(n[0]+n[8]+s[0],n[1]+n[9]+s[1],n[2]+n[10]+s[2]),d=S(n[4]+n[8]+s[0],n[5]+n[9]+s[1],n[6]+n[10]+s[2]),v=S(n[0]+n[4]+n[8]+s[0],n[1]+n[5]+n[9]+s[1],n[2]+n[6]+n[10]+s[2]);o(i),o(l),o(u),o(m),o(c),o(f),o(d),o(v),t(i,l),t(i,u),t(i,m),t(c,u),t(c,l),t(c,v),t(d,v),t(d,m),t(d,u),t(f,m),t(f,v),t(f,l)}function ae(e){var t=[],o=e.atoms.slice();o.sort(function(e,t){return e.z-t.z});for(var n=0;n<o.length;n++)for(var a=o[n],r=n+1;r<o.length&&o[r].z<o[n].z+5*He;){var s=o[r],i=S(a.x,a.y,a.z),l=S(s.x,s.y,s.z),u=M(i,l),m=Oe[a.symbol],c=Oe[s.symbol];u<2.5*(m.radius+c.radius)&&t.push({posA:{x:a.x,y:a.y,z:a.z},posB:{x:s.x,y:s.y,z:s.z},radA:m.radius,radB:c.radius,colA:{r:m.color[0],g:m.color[1],b:m.color[2]},colB:{r:c.color[0],g:c.color[1],b:c.color[2]},cutoff:u/(m.radius+c.radius)}),r++}t.sort(function(e,t){return e.cutoff-t.cutoff}),e.bonds=t}function re(e,t,o,n,a){e.atoms.push({symbol:t,x:o,y:n,z:a})}function se(e){for(var t=0,o=0,n=0,a=0;a<e.atoms.length;a++)t+=e.atoms[a].x,o+=e.atoms[a].y,n+=e.atoms[a].z;return{x:t/e.atoms.length,y:o/e.atoms.length,z:n/e.atoms.length}}function ie(e){for(var t=se(e),o=0;o<e.atoms.length;o++){var n=e.atoms[o];n.x-=t.x,n.y-=t.y,n.z-=t.z}e.lattice.matrix[3]-=t.x,e.lattice.matrix[7]-=t.y,e.lattice.matrix[11]-=t.z}function le(e){if(void 0!==e.farAtom)return e.farAtom;e.farAtom=e.atoms[0];for(var t=0,o=0;o<e.atoms.length;o++){var n=e.atoms[o],a=Oe[n.symbol].radius,r=2.5*Math.sqrt(a*a+a*a+a*a),s=Math.sqrt(n.x*n.x+n.y*n.y+n.z*n.z)+r;s>t&&(t=s,e.farAtom=n)}return e.farAtom}function ue(e){var t=le(e),o=He,n=2.5*Math.sqrt(o*o+o*o+o*o);return Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)+n}function me(e,t,o){function n(e){se=!0,m.viewport(0,0,t,t),A.bind(),m.clear(m.COLOR_BUFFER_BIT|m.DEPTH_BUFFER_BIT);var o=ee(e),n=c();p(n,o.left,o.right,o.bottom,o.top,0,i);var a=c();h(a,[0,0,0],[0,0,-1],[0,1,0]);var r=c();De(r,r,[0,0,-i/2]),Fe(r,r,e.rotation),B.setUniform("uProjection","Matrix4fv",!1,n),B.setUniform("uView","Matrix4fv",!1,a),B.setUniform("uModel","Matrix4fv",!1,r),B.setUniform("uBottomLeft","2fv",[o.left,o.bottom]),B.setUniform("uTopRight","2fv",[o.right,o.top]),B.setUniform("uAtomScale","1f",2.5*e.atomScale),B.setUniform("uRelativeAtomScale","1f",e.relativeAtomScale),B.setUniform("uRes","1f",t),B.setUniform("uDepth","1f",i),B.setUniform("uMode","1i",0),B.setUniform("uAtomShade","1f",e.atomShade),Z.render(),(e.bonds||e.lattice)&&null!=J&&(A.bind(),X.setUniform("uProjection","Matrix4fv",!1,n),X.setUniform("uView","Matrix4fv",!1,a),X.setUniform("uModel","Matrix4fv",!1,r),X.setUniform("uRotation","Matrix4fv",!1,e.rotation),X.setUniform("uDepth","1f",i),X.setUniform("uBottomLeft","2fv",[o.left,o.bottom]),X.setUniform("uTopRight","2fv",[o.right,o.top]),X.setUniform("uRes","1f",t),X.setUniform("uBondShade","1f",e.bondShade),X.setUniform("uAtomScale","1f",2.5*e.atomScale),X.setUniform("uRelativeAtomScale","1f",e.relativeAtomScale),X.setUniform("uMode","1i",0),J.render())}function a(e){ie=!0,m.viewport(0,0,t,t),w.bind(),m.clear(m.COLOR_BUFFER_BIT|m.DEPTH_BUFFER_BIT);var o=ee(e),n=c();p(n,o.left,o.right,o.bottom,o.top,0,i);var a=c();h(a,[0,0,0],[0,0,-1],[0,1,0]);var r=c();De(r,r,[0,0,-i/2]),Fe(r,r,e.rotation),B.setUniform("uProjection","Matrix4fv",!1,n),B.setUniform("uView","Matrix4fv",!1,a),B.setUniform("uModel","Matrix4fv",!1,r),B.setUniform("uBottomLeft","2fv",[o.left,o.bottom]),B.setUniform("uTopRight","2fv",[o.right,o.top]),B.setUniform("uAtomScale","1f",2.5*e.atomScale),B.setUniform("uRelativeAtomScale","1f",e.relativeAtomScale),B.setUniform("uRes","1f",t),B.setUniform("uDepth","1f",i),B.setUniform("uMode","1i",1),B.setUniform("uAtomShade","1f",e.atomShade),Z.render(),(e.bonds||e.lattice)&&null!=J&&(w.bind(),X.setUniform("uProjection","Matrix4fv",!1,n),X.setUniform("uView","Matrix4fv",!1,a),X.setUniform("uModel","Matrix4fv",!1,r),X.setUniform("uRotation","Matrix4fv",!1,e.rotation),X.setUniform("uDepth","1f",i),X.setUniform("uBottomLeft","2fv",[o.left,o.bottom]),X.setUniform("uTopRight","2fv",[o.right,o.top]),X.setUniform("uRes","1f",t),X.setUniform("uBondShade","1f",e.bondShade),X.setUniform("uAtomScale","1f",2.5*e.atomScale),X.setUniform("uRelativeAtomScale","1f",e.relativeAtomScale),X.setUniform("uMode","1i",1),J.render())}function r(e){m.viewport(0,0,o,o);var n=k(e);n.zoom=1/i,n.translation.x=0,n.translation.y=0;for(var a=c(),r=0;r<3;r++){var s=I(x(),1);b(a,a,10*Math.random(),s)}n.rotation=Fe(c(),a,n.rotation),U.bind(),m.clear(m.COLOR_BUFFER_BIT|m.DEPTH_BUFFER_BIT);var l=ee(n),u=c();p(u,l.left,l.right,l.bottom,l.top,0,i);var f=c();h(f,[0,0,0],[0,0,-1],[0,1,0]);var M=c();De(M,M,[0,0,-i/2]),Fe(M,M,n.rotation),B.setUniform("uProjection","Matrix4fv",!1,u),B.setUniform("uView","Matrix4fv",!1,f),B.setUniform("uModel","Matrix4fv",!1,M),B.setUniform("uBottomLeft","2fv",[l.left,l.bottom]),B.setUniform("uTopRight","2fv",[l.right,l.top]),B.setUniform("uAtomScale","1f",2.5*n.atomScale),B.setUniform("uRelativeAtomScale","1f",e.relativeAtomScale),B.setUniform("uRes","1f",o),B.setUniform("uDepth","1f",i),B.setUniform("uMode","1i",0),B.setUniform("uAtomShade","1f",e.atomShade),Z.render(),(e.bonds||e.lattice)&&null!=J&&(X.setUniform("uProjection","Matrix4fv",!1,u),X.setUniform("uView","Matrix4fv",!1,f),X.setUniform("uModel","Matrix4fv",!1,M),X.setUniform("uRotation","Matrix4fv",!1,n.rotation),X.setUniform("uDepth","1f",i),X.setUniform("uBottomLeft","2fv",[l.left,l.bottom]),X.setUniform("uTopRight","2fv",[l.right,l.top]),X.setUniform("uRes","1f",o),X.setUniform("uBondShade","1f",e.bondShade),X.setUniform("uAtomScale","1f",2.5*e.atomScale),X.setUniform("uRelativeAtomScale","1f",e.relativeAtomScale),X.setUniform("uMode","1i",0),J.render()),m.viewport(0,0,t,t);var F=ee(e),D=ee(n),g=ye(c(),a);z.bind(),m.clear(m.COLOR_BUFFER_BIT|m.DEPTH_BUFFER_BIT),W.setUniform("uSceneDepth","1i",v.index),W.setUniform("uSceneNormal","1i",d.index),W.setUniform("uRandRotDepth","1i",S.index),W.setUniform("uAccumulator","1i",y.index),W.setUniform("uSceneBottomLeft","2fv",[F.left,F.bottom]),W.setUniform("uSceneTopRight","2fv",[F.right,F.top]),W.setUniform("uRotBottomLeft","2fv",[D.left,D.bottom]),W.setUniform("uRotTopRight","2fv",[D.right,D.top]),W.setUniform("uRes","1f",t),W.setUniform("uDepth","1f",i),W.setUniform("uRot","Matrix4fv",!1,a),W.setUniform("uInvRot","Matrix4fv",!1,g),W.setUniform("uSampleCount","1i",re),$.render(),y.activate(),y.bind(),m.copyTexImage2D(m.TEXTURE_2D,0,m.RGBA,0,0,t,t,0)}function s(e){if(m.viewport(0,0,t,t),e.fxaa>0||e.dofStrength>0?P.bind():m.bindFramebuffer(m.FRAMEBUFFER,null),m.clear(m.COLOR_BUFFER_BIT|m.DEPTH_BUFFER_BIT),q.setUniform("uSceneColor","1i",f.index),q.setUniform("uSceneDepth","1i",v.index),q.setUniform("uAccumulatorOut","1i",F.index),q.setUniform("uRes","1f",t),q.setUniform("uAO","1f",2*e.ao),q.setUniform("uBrightness","1f",2*e.brightness),q.setUniform("uOutlineStrength","1f",e.outline),oe.render(),e.fxaa>0){e.dofStrength>0?T.bind():m.bindFramebuffer(m.FRAMEBUFFER,null);for(var o=0;o<e.fxaa;o++)m.clear(m.COLOR_BUFFER_BIT|m.DEPTH_BUFFER_BIT),0==o?G.setUniform("uTexture","1i",R.index):G.setUniform("uTexture","1i",D.index),G.setUniform("uRes","1f",t),ae.render(),D.activate(),D.bind(),m.copyTexImage2D(m.TEXTURE_2D,0,m.RGBA,0,0,t,t,0)}e.dofStrength>0&&(m.bindFramebuffer(m.FRAMEBUFFER,null),m.clear(m.COLOR_BUFFER_BIT|m.DEPTH_BUFFER_BIT),e.fxaa>0?V.setUniform("uColor","1i",D.index):V.setUniform("uColor","1i",R.index),V.setUniform("uDepth","1i",v.index),V.setUniform("uDOFPosition","1f",e.dofPosition),V.setUniform("uDOFStrength","1f",e.dofStrength),V.setUniform("uRes","1f",t),ne.render())}var i,l,u,m,e,f,d,v,S,M,y,F,D,g,_,R,A,w,U,z,T,E,P,B,X,W,q,G,V,j,Y,K=this,Z=null,J=null,Q=null,$=null,oe=null,ne=null,ae=null,re=0,se=!1,ie=!1;K.getAOProgress=function(){return re/1024},K.initialize=function(){e.width=e.height=t,m=e.getContext("webgl"),m.enable(m.DEPTH_TEST),m.enable(m.CULL_FACE),m.clearColor(0,0,0,0),m.clearDepth(1),m.viewport(0,0,t,t),window.gl=m,Y=N(m,["EXT_frag_depth","WEBGL_depth_texture"]),K.createTextures(),B=ce(m,Be.atoms),X=ce(m,Be.bonds),j=ce(m,Be.texturedquad),W=ce(m,Be.accumulator),q=ce(m,Be.ao),G=ce(m,Be.fxaa),V=ce(m,Be.dof);var o=[-1,-1,0,1,-1,0,1,1,0,-1,-1,0,1,1,0,-1,1,0],n=C(m,{aPosition:3});n.aPosition.buffer.set(new Float32Array(o));var a=o.length/9;Q=new H(m,j,n,a),$=new H(m,W,n,a),oe=new H(m,q,n,a),ae=new H(m,G,n,a),ne=new H(m,V,n,a),l=0},K.createTextures=function(){M=new O(m,0,null,o,o),S=new O(m,1,null,o,o,{internalFormat:m.DEPTH_COMPONENT,format:m.DEPTH_COMPONENT,type:m.UNSIGNED_SHORT}),U=new L(m,[M],S),f=new O(m,2,null,t,t),d=new O(m,3,null,t,t),v=new O(m,4,null,t,t,{internalFormat:m.DEPTH_COMPONENT,format:m.DEPTH_COMPONENT,type:m.UNSIGNED_SHORT}),A=new L(m,[f],v),w=new L(m,[d],v),y=new O(m,5,null,t,t),F=new O(m,6,null,t,t),z=new L(m,[F]),R=new O(m,7,null,t,t),P=new L(m,[R]),D=new O(m,8,null,t,t),g=new O(m,9,null,t,t),T=new L(m,[g]),_=new O(m,10,null,t,t),E=new L(m,[_])},K.setResolution=function(n,a){o=a,t=n,e.width=e.height=t,m.viewport(0,0,t,t),K.createTextures()},K.setSystem=function(e,t){function o(e){for(var t=[],o=0;o<36;o++)t.push.apply(t,e);return t}u=e;for(var n=C(m,{aImposter:3,aPosition:3,aRadius:1,aColor:3}),a=[],r=[],s=[],i=[],l=0;l<u.atoms.length;l++){a.push.apply(a,Le);var c=u.atoms[l];r.push.apply(r,o([c.x,c.y,c.z])),s.push.apply(s,o([Oe[c.symbol].radius]));var f=Oe[c.symbol].color;i.push.apply(i,o([f[0],f[1],f[2]]))}if(t.lattice&&u.lattice.points)for(var l=0;l<u.lattice.points.length;l++){a.push.apply(a,Le);var c=u.lattice.points[l];r.push.apply(r,o(c.position)),s.push.apply(s,o([-4*te(t)])),i.push.apply(i,o(c.color))}if(a.length>0){n.aImposter.buffer.set(new Float32Array(a)),n.aPosition.buffer.set(new Float32Array(r)),n.aRadius.buffer.set(new Float32Array(s)),n.aColor.buffer.set(new Float32Array(i));var d=a.length/9;Z=new H(m,B,n,d)}if(t.bonds||t.lattice){J=null;var n=C(m,{aImposter:3,aPosA:3,aPosB:3,aRadius:1,aRadA:1,aRadB:1,aColA:3,aColB:3}),a=[],v=[],b=[],s=[],p=[],h=[],x=[],S=[];if(t.bonds&&u.bonds.length>0)for(var l=0;l<u.bonds.length;l++){var M=u.bonds[l];if(M.cutoff>t.bondThreshold)break;a.push.apply(a,Le),v.push.apply(v,o([M.posA.x,M.posA.y,M.posA.z])),b.push.apply(b,o([M.posB.x,M.posB.y,M.posB.z])),s.push.apply(s,o([2.5*te(t)])),p.push.apply(p,o([M.radA])),h.push.apply(h,o([M.radB])),x.push.apply(x,o([M.colA.r,M.colA.g,M.colA.b])),S.push.apply(S,o([M.colB.r,M.colB.g,M.colB.b]))}if(t.lattice&&u.lattice.edges)for(var l=0;l<u.lattice.edges.length;l++){var M=u.lattice.edges[l];a.push.apply(a,Le),v.push.apply(v,o([M.posA.x,M.posA.y,M.posA.z])),b.push.apply(b,o([M.posB.x,M.posB.y,M.posB.z])),s.push.apply(s,o([.5*te(t)])),p.push.apply(p,o([M.radA])),h.push.apply(h,o([M.radB])),x.push.apply(x,o([M.colA.r,M.colA.g,M.colA.b])),S.push.apply(S,o([M.colB.r,M.colB.g,M.colB.b]))}if(a.length>0){n.aImposter.buffer.set(new Float32Array(a)),n.aPosA.buffer.set(new Float32Array(v)),n.aPosB.buffer.set(new Float32Array(b)),n.aRadius.buffer.set(new Float32Array(s)),n.aRadA.buffer.set(new Float32Array(p)),n.aRadB.buffer.set(new Float32Array(h)),n.aColA.buffer.set(new Float32Array(x)),n.aColB.buffer.set(new Float32Array(S));var d=a.length/9;J=new H(m,X,n,d)}}},K.reset=function(){re=0,se=!1,ie=!1,y.reset(),F.reset()},K.render=function(e){if(void 0!==u&&null!=Z){if(i=2*ue(u),se)if(ie)for(var t=0;t<e.spf&&!(re>1024);t++)r(e),re++;else a(e);else n(e);s(e)}},K.initialize()}function ce(e,t){return t=t.split("// __split__"),new W(e,t[0],t[1])}function fe(e){e._state.needReset&&(e._renderer.reset(),e._state.needReset=!1),e._renderer.render(e._view),requestAnimationFrame(function(){fe(e)})}function de(e){e.addEventListener("mousedown",function(t){document.body.style.cursor="none",0==t.button&&(e._state.buttonDown=!0),e._state.lastX=t.clientX,e._state.lastY=t.clientY}),window.addEventListener("mouseup",function(t){document.body.style.cursor="",0==t.button&&(e._state.buttonDown=!1)}),setInterval(function(){e._state.buttonDown||(document.body.style.cursor="")},10),window.addEventListener("mousemove",function(t){if(e.clientWidth==e._state.width&&e.clientHeight==e._state.height||e.dispatchEvent(new CustomEvent("resize-canvas",{detail:"resize canvas"})),e._state.width=e.clientWidth,e._state.height=e.clientHeight,e._state.buttonDown){var o=t.clientX-e._state.lastX,n=t.clientY-e._state.lastY;0==o&&0==n||(e._state.lastX=t.clientX,
e._state.lastY=t.clientY,t.shiftKey?Q(e._view,o,n):$(e._view,o,n),e._state.needReset=!0)}}),e.addEventListener("wheel",function(t){var o=0;o=t.deltaY<0?1:-1,e._view.zoom=e._view.zoom*(1===o?1/.9:.9),J(e._view),e._state.needReset=!0,t.preventDefault()}),e.addEventListener("resize-canvas",function(t){var o=Math.min(e.clientWidth,e.clientHeight);o<100&&(o=100),console.log("resolution changed"),e._view.resolution=o,J(e._view),e._renderer.setResolution(e._view.resolution,e._view.aoRes),e._state.needReset=!0})}var ve,be=1e-6,pe="undefined"!=typeof Float32Array?Float32Array:Array,he=Math.random,xe=!1,Se=pe===Float32Array&&"undefined"!=typeof SIMD,Me=xe&&Se,ye=Me?s:t,Fe=Me?i:o,De=Me?l:n,ge=Me?u:a,Ie=Me?m:r,_e=(function(){var e=x();return function(t,o,n,a,r,s){var i,l;for(o||(o=3),n||(n=0),l=a?Math.min(a*o+n,t.length):t.length,i=n;i<l;i+=o)e[0]=t[i],e[1]=t[i+1],e[2]=t[i+2],r(e,e,s),t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2];return t}}(),function(){var e=_();return function(t,o,n,a,r,s){var i,l;for(o||(o=4),n||(n=0),l=a?Math.min(a*o+n,t.length):t.length,i=n;i<l;i+=o)e[0]=t[i],e[1]=t[i+1],e[2]=t[i+2],e[3]=t[i+3],r(e,e,s),t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=e[3];return t}}(),function(){var e=x(),t=S(1,0,0),o=S(0,1,0);return function(n,a,r){var s=D(a,r);return s<-.999999?(g(e,t,a),y(e)<1e-6&&g(e,o,a),F(e,e),z(n,e,Math.PI),n):s>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(g(e,a,r),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1+s,_e(n,n))}}(),function(){var t=e();return function(e,o,n,a){return t[0]=n[0],t[3]=n[1],t[6]=n[2],t[1]=a[0],t[4]=a[1],t[7]=a[2],t[2]=-o[0],t[5]=-o[1],t[8]=-o[2],_e(e,E(e,t))}}(),function(){var e=U(),t=U();return function(o,n,a,r,s,i){return T(e,n,s,i),T(t,a,r,i),T(o,e,t,2*i*(1-i)),o}}(),A),Re=(function(){var e=P();return function(t,o,n,a,r,s){var i,l;for(o||(o=2),n||(n=0),l=a?Math.min(a*o+n,t.length):t.length,i=n;i<l;i+=o)e[0]=t[i],e[1]=t[i+1],r(e,e,s),t[i]=e[0],t[i+1]=e[1];return t}}(),{atoms:{atomScale:.6,relativeAtomScale:.64,bondScale:.5,ao:.75,aoRes:256,brightness:.5,outline:0,spf:32,bondThreshold:1.2,bondShade:.5,atomShade:.5,dofStrength:0,dofPosition:.5,fxaa:1},atomsbonds:{atomScale:.24,relativeAtomScale:.64,bondScale:.5,bondThreshold:1.2},toon:{ao:0,spf:0,brightness:.5,outline:1},licorice:{atomScale:.1,relativeAtomScale:0,bondScale:1,bonds:!0,bondThreshold:1.2}}),Ae="#version 100\nprecision highp float;\n\nattribute vec3 aImposter;\nattribute vec3 aPosition;\nattribute float aRadius;\nattribute vec3 aColor;\n\nuniform mat4 uView;\nuniform mat4 uProjection;\nuniform mat4 uModel;\nuniform float uAtomScale;\nuniform float uRelativeAtomScale;\nuniform float uAtomShade;\n\nvarying vec3 vColor;\nvarying vec3 vPosition;\nvarying float vRadius;\n\nvoid main() {\n    vRadius = uAtomScale * (1.0 + (aRadius - 1.0) * uRelativeAtomScale);\n    gl_Position = uProjection * uView * uModel * vec4(vRadius * aImposter + aPosition, 1.0);\n    vColor = mix(aColor, vec3(1,1,1), uAtomShade);\n    vPosition = vec3(uModel * vec4(aPosition, 1));\n}\n\n\n// __split__\n\n\n#version 100\n#extension GL_EXT_frag_depth: enable\nprecision highp float;\n\nuniform vec2 uBottomLeft;\nuniform vec2 uTopRight;\nuniform float uRes;\nuniform float uDepth;\nuniform int uMode;\n\nvarying vec3 vPosition;\nvarying float vRadius;\nvarying vec3 vColor;\n\nvec2 res = vec2(uRes, uRes);\n\nfloat raySphereIntersect(vec3 r0, vec3 rd) {\n    float a = dot(rd, rd);\n    vec3 s0_r0 = r0 - vPosition;\n    float b = 2.0 * dot(rd, s0_r0);\n    float c = dot(s0_r0, s0_r0) - (vRadius * vRadius);\n    float disc = b*b - 4.0*a*c;\n    if (disc <= 0.0) {\n        return -1.0;\n    }\n    return (-b - sqrt(disc))/(2.0*a);\n}\n\nvoid main() {\n    vec3 r0 = vec3(uBottomLeft + (gl_FragCoord.xy/res) * (uTopRight - uBottomLeft), 0.0);\n    vec3 rd = vec3(0, 0, -1);\n    float t = raySphereIntersect(r0, rd);\n    if (t < 0.0) {\n        discard;\n    }\n    vec3 coord = r0 + rd * t;\n    vec3 normal = normalize(coord - vPosition);\n    if (uMode == 0) {\n        gl_FragColor = vec4(vColor, 1);\n    } else if (uMode == 1) {\n        gl_FragColor = vec4(normal * 0.5 + 0.5, 1.0);\n    }\n    gl_FragDepthEXT = -coord.z/uDepth;\n}\n",we="#version 100\nprecision highp float;\n\nattribute vec3 aImposter;\nattribute vec3 aPosA;\nattribute vec3 aPosB;\nattribute float aRadius;\nattribute float aRadA;\nattribute float aRadB;\nattribute vec3 aColA;\nattribute vec3 aColB;\n\nuniform mat4 uView;\nuniform mat4 uProjection;\nuniform mat4 uModel;\nuniform mat4 uRotation;\nuniform float uAtomScale;\nuniform float uRelativeAtomScale;\n\nvarying vec3 vNormal;\nvarying vec3 vPosA, vPosB;\nvarying float vRadA, vRadB;\nvarying vec3 vColA, vColB;\nvarying float vRadius;\n\nmat3 alignVector(vec3 a, vec3 b) {\n    vec3 v = cross(a, b);\n    float s = length(v);\n    float c = dot(a, b);\n    mat3 I = mat3(\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n    );\n    mat3 vx = mat3(\n        0, v.z, -v.y,\n        -v.z, 0, v.x,\n        v.y, -v.x, 0\n    );\n    return I + vx + vx * vx * ((1.0 - c) / (s * s));\n}\n\nvoid main() {\n    vRadius = aRadius;\n    vec3 pos = vec3(aImposter);\n    // Scale the box in x and z to be bond-radius.\n    pos = pos * vec3(vRadius, 1, vRadius);\n    // Shift the origin-centered cube so that the bottom is at the origin.\n    pos = pos + vec3(0, 1, 0);\n    // Stretch the box in y so that it is the length of the bond.\n    pos = pos * vec3(1, length(aPosA - aPosB) * 0.5, 1);\n    // Find the rotation that aligns vec3(0, 1, 0) with vec3(uPosB - uPosA) and apply it.\n    vec3 a = normalize(vec3(-0.000001, 1.000001, 0.000001));\n    vec3 b = normalize(aPosB - aPosA);\n    mat3 R = alignVector(a, b);\n    pos = R * pos;\n    // Shift the cube so that the bottom is centered at the middle of atom A.\n    pos = pos + aPosA;\n\n    vec4 position = uModel * vec4(pos, 1);\n    gl_Position = uProjection * uView * position;\n    vPosA = aPosA;\n    vPosB = aPosB;\n    vRadA = uAtomScale * (1.0 + (aRadA - 1.0) * uRelativeAtomScale);\n    vRadB = uAtomScale * (1.0 + (aRadB - 1.0) * uRelativeAtomScale);\n    vColA = aColA;\n    vColB = aColB;\n}\n\n\n// __split__\n\n\n#version 100\n#extension GL_EXT_frag_depth: enable\nprecision highp float;\n\nuniform mat4 uRotation;\nuniform vec2 uBottomLeft;\nuniform vec2 uTopRight;\nuniform float uDepth;\nuniform float uRes;\nuniform float uBondShade;\nuniform int uMode;\n\nvarying vec3 vPosA, vPosB;\nvarying float vRadA, vRadB;\nvarying vec3 vColA, vColB;\nvarying float vRadius;\n\nmat3 alignVector(vec3 a, vec3 b) {\n    vec3 v = cross(a, b);\n    float s = length(v);\n    float c = dot(a, b);\n    mat3 I = mat3(\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n    );\n    mat3 vx = mat3(\n        0, v.z, -v.y,\n        -v.z, 0, v.x,\n        v.y, -v.x, 0\n    );\n    return I + vx + vx * vx * ((1.0 - c) / (s * s));\n}\n\nvoid main() {\n\n    vec2 res = vec2(uRes, uRes);\n    vec3 r0 = vec3(uBottomLeft + (gl_FragCoord.xy/res) * (uTopRight - uBottomLeft), uDepth/2.0);\n    vec3 rd = vec3(0, 0, -1);\n\n    vec3 i = normalize(vPosB - vPosA);\n         i = vec3(uRotation * vec4(i, 0));\n    vec3 j = normalize(vec3(-0.000001, 1.000001, 0.000001));\n    mat3 R = alignVector(i, j);\n\n    vec3 r0p = r0 - vec3(uRotation * vec4(vPosA, 0));\n    r0p = R * r0p;\n    vec3 rdp = R * rd;\n\n    float a = dot(rdp.xz, rdp.xz);\n    float b = 2.0 * dot(rdp.xz, r0p.xz);\n    float c = dot(r0p.xz, r0p.xz) - vRadius*vRadius;\n    float disc = b*b - 4.0*a*c;\n    if (disc <= 0.0) {\n        discard;\n    }\n    float t = (-b - sqrt(disc))/(2.0*a);\n    if (t < 0.0) {\n        discard;\n    }\n\n    vec3 coord = r0p + rdp * t;\n    if (coord.y < 0.0 || coord.y > length(vPosA - vPosB)) {\n        discard;\n    }\n\n    vec3 color;\n    if (coord.y < vRadA + 0.5 * (length(vPosA - vPosB) - (vRadA + vRadB))) {\n        color = vColA;\n    } else {\n        color = vColB;\n    }\n\n    color = mix(color, vec3(1,1,1), uBondShade);\n\n    R = alignVector(j, i);\n    vec3 normal = normalize(R * vec3(coord.x, 0, coord.z));\n\n    coord = r0 + rd * t;\n    if (uMode == 0) {\n        gl_FragColor = vec4(color, 1);\n    } else if (uMode == 1) {\n        gl_FragColor = vec4(normal * 0.5 + 0.5, 1.0);\n    }\n    gl_FragDepthEXT = -(coord.z - uDepth/2.0)/uDepth;\n}\n",Ue="#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform float uRes;\n\nvoid main() {\n    gl_FragColor = texture2D(uTexture, gl_FragCoord.xy/uRes);\n}\n",ze="#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uSceneDepth;\nuniform sampler2D uSceneNormal;\nuniform sampler2D uRandRotDepth;\nuniform sampler2D uAccumulator;\nuniform mat4 uRot;\nuniform mat4 uInvRot;\nuniform vec2 uSceneBottomLeft;\nuniform vec2 uSceneTopRight;\nuniform vec2 uRotBottomLeft;\nuniform vec2 uRotTopRight;\nuniform float uDepth;\nuniform float uRes;\nuniform int uSampleCount;\n\nvoid main() {\n\n    float dScene = texture2D(uSceneDepth, gl_FragCoord.xy/uRes).r;\n\n    vec3 r = vec3(uSceneBottomLeft + (gl_FragCoord.xy/uRes) * (uSceneTopRight - uSceneBottomLeft), 0.0);\n\n    r.z = -(dScene - 0.5) * uDepth;\n    r = vec3(uRot * vec4(r, 1));\n    float depth = -r.z/uDepth + 0.5;\n\n    vec2 p = (r.xy - uRotBottomLeft)/(uRotTopRight - uRotBottomLeft);\n\n    float dRandRot = texture2D(uRandRotDepth, p).r;\n\n    float ao = step(dRandRot, depth * 0.99);\n\n    vec3 normal = texture2D(uSceneNormal, gl_FragCoord.xy/uRes).rgb * 2.0 - 1.0;\n    vec3 dir = vec3(uInvRot * vec4(0, 0, 1, 0));\n    float mag = dot(dir, normal);\n    float sampled = step(0.0, mag);\n\n    ao *= sampled;\n\n    vec4 acc = texture2D(uAccumulator, gl_FragCoord.xy/uRes);\n\n    if (uSampleCount < 256) {\n        acc.r += ao/255.0;\n    } else if (uSampleCount < 512) {\n        acc.g += ao/255.0;\n    } else if (uSampleCount < 768) {\n        acc.b += ao/255.0;\n    } else {\n        acc.a += ao/255.0;\n    }\n        \n    gl_FragColor = acc;\n\n}\n",Te="#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uSceneColor;\nuniform sampler2D uSceneDepth;\nuniform sampler2D uAccumulatorOut;\nuniform float uRes;\nuniform float uAO;\nuniform float uBrightness;\nuniform float uOutlineStrength;\n\nvoid main() {\n    vec2 p = gl_FragCoord.xy/uRes;\n    vec4 sceneColor = texture2D(uSceneColor, p);\n    if (uOutlineStrength > 0.0) {\n        float depth = texture2D(uSceneDepth, p).r;\n        float r = 1.0/511.0;\n        float d0 = abs(texture2D(uSceneDepth, p + vec2(-r,  0)).r - depth);\n        float d1 = abs(texture2D(uSceneDepth, p + vec2( r,  0)).r - depth);\n        float d2 = abs(texture2D(uSceneDepth, p + vec2( 0, -r)).r - depth);\n        float d3 = abs(texture2D(uSceneDepth, p + vec2( 0,  r)).r - depth);\n        float d = max(d0, d1);\n        d = max(d, d2);\n        d = max(d, d3);\n        sceneColor.rgb *= pow(1.0 - d, uOutlineStrength * 32.0);\n        sceneColor.a = max(step(0.003, d), sceneColor.a);\n    }\n    vec4 dAccum = texture2D(uAccumulatorOut, p);\n    float shade = max(0.0, 1.0 - (dAccum.r + dAccum.g + dAccum.b + dAccum.a) * 0.25 * uAO);\n    shade = pow(shade, 2.0);\n    gl_FragColor = vec4(uBrightness * sceneColor.rgb * shade, sceneColor.a);\n}\n",Ee="#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform float uRes;\n\nvoid main() {\n    float FXAA_SPAN_MAX = 8.0;\n    float FXAA_REDUCE_MUL = 1.0/8.0;\n    float FXAA_REDUCE_MIN = 1.0/128.0;\n\n    vec2 texCoords = gl_FragCoord.xy/uRes;\n\n    vec4 rgbNW = texture2D(uTexture, texCoords + (vec2(-1.0, -1.0) / uRes));\n    vec4 rgbNE = texture2D(uTexture, texCoords + (vec2(1.0, -1.0) / uRes));\n    vec4 rgbSW = texture2D(uTexture, texCoords + (vec2(-1.0, 1.0) / uRes));\n    vec4 rgbSE = texture2D(uTexture, texCoords + (vec2(1.0, 1.0) / uRes));\n    vec4 rgbM  = texture2D(uTexture, texCoords);\n\n    vec4 luma = vec4(0.299, 0.587, 0.114, 1.0);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n\n    float rcpDirMin = 1.0/(min(abs(dir.x), abs(dir.y)) + dirReduce);\n\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX), max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX), dir * rcpDirMin)) / uRes;\n\n    vec4 rgbA = (1.0/2.0) * \n        (texture2D(uTexture, texCoords.xy + dir * (1.0/3.0 - 0.5)) + \n         texture2D(uTexture, texCoords.xy + dir * (2.0/3.0 - 0.5)));\n    vec4 rgbB = rgbA * (1.0/2.0) + (1.0/4.0) * \n        (texture2D(uTexture, texCoords.xy + dir * (0.0/3.0 - 0.5)) +\n         texture2D(uTexture, texCoords.xy + dir * (3.0/3.0 - 0.5)));\n    float lumaB = dot(rgbB, luma);\n\n    if((lumaB < lumaMin) || (lumaB > lumaMax)){\n        gl_FragColor = rgbA;\n    } else {\n        gl_FragColor = rgbB;\n    }\n\n}",Pe="#version 100\nprecision highp float;\n\nattribute vec3 aPosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 1);\n}\n\n\n// __split__\n\n\n#version 100\nprecision highp float;\n\nuniform sampler2D uColor;\nuniform sampler2D uDepth;\nuniform float uRes;\nuniform float uDOFPosition;\nuniform float uDOFStrength;\nuniform int leftRight;\n\nvoid main() {\n\n    vec2 samples[64];\n    samples[0] = vec2(0.857612, 0.019885);\n    samples[1] = vec2(0.563809, -0.028071);\n    samples[2] = vec2(0.825599, -0.346856);\n    samples[3] = vec2(0.126584, -0.380959);\n    samples[4] = vec2(0.782948, 0.594322);\n    samples[5] = vec2(0.292148, -0.543265);\n    samples[6] = vec2(0.130700, 0.330220);\n    samples[7] = vec2(0.236088, 0.159604);\n    samples[8] = vec2(-0.305259, 0.810505);\n    samples[9] = vec2(0.269616, 0.923026);\n    samples[10] = vec2(0.484486, 0.371845);\n    samples[11] = vec2(-0.638057, 0.080447);\n    samples[12] = vec2(0.199629, 0.667280);\n    samples[13] = vec2(-0.861043, -0.370583);\n    samples[14] = vec2(-0.040652, -0.996174);\n    samples[15] = vec2(0.330458, -0.282111);\n    samples[16] = vec2(0.647795, -0.214354);\n    samples[17] = vec2(0.030422, -0.189908);\n    samples[18] = vec2(0.177430, -0.721124);\n    samples[19] = vec2(-0.461163, -0.327434);\n    samples[20] = vec2(-0.410012, -0.734504);\n    samples[21] = vec2(-0.616334, -0.626069);\n    samples[22] = vec2(0.590759, -0.726479);\n    samples[23] = vec2(-0.590794, 0.805365);\n    samples[24] = vec2(-0.924561, -0.163739);\n    samples[25] = vec2(-0.323028, 0.526960);\n    samples[26] = vec2(0.642128, 0.752577);\n    samples[27] = vec2(0.173625, -0.952386);\n    samples[28] = vec2(0.759014, 0.330311);\n    samples[29] = vec2(-0.360526, -0.032013);\n    samples[30] = vec2(-0.035320, 0.968156);\n    samples[31] = vec2(0.585478, -0.431068);\n    samples[32] = vec2(-0.244766, -0.906947);\n    samples[33] = vec2(-0.853096, 0.184615);\n    samples[34] = vec2(-0.089061, 0.104648);\n    samples[35] = vec2(-0.437613, 0.285308);\n    samples[36] = vec2(-0.654098, 0.379841);\n    samples[37] = vec2(-0.128663, 0.456572);\n    samples[38] = vec2(0.015980, -0.568170);\n    samples[39] = vec2(-0.043966, -0.771940);\n    samples[40] = vec2(0.346512, -0.071238);\n    samples[41] = vec2(-0.207921, -0.209121);\n    samples[42] = vec2(-0.624075, -0.189224);\n    samples[43] = vec2(-0.120618, 0.689339);\n    samples[44] = vec2(-0.664679, -0.410200);\n    samples[45] = vec2(0.371945, -0.880573);\n    samples[46] = vec2(-0.743251, 0.629998);\n    samples[47] = vec2(-0.191926, -0.413946);\n    samples[48] = vec2(0.449574, 0.833373);\n    samples[49] = vec2(0.299587, 0.449113);\n    samples[50] = vec2(-0.900432, 0.399319);\n    samples[51] = vec2(0.762613, -0.544796);\n    samples[52] = vec2(0.606462, 0.174233);\n    samples[53] = vec2(0.962185, -0.167019);\n    samples[54] = vec2(0.960990, 0.249552);\n    samples[55] = vec2(0.570397, 0.559146);\n    samples[56] = vec2(-0.537514, 0.555019);\n    samples[57] = vec2(0.108491, -0.003232);\n    samples[58] = vec2(-0.237693, -0.615428);\n    samples[59] = vec2(-0.217313, 0.261084);\n    samples[60] = vec2(-0.998966, 0.025692);\n    samples[61] = vec2(-0.418554, -0.527508);\n    samples[62] = vec2(-0.822629, -0.567797);\n    samples[63] = vec2(0.061945, 0.522105);\n\n    float invRes = 1.0/uRes;\n    vec2 coord = gl_FragCoord.xy * invRes;\n\n    float strength = uDOFStrength * uRes/768.0;\n\n    float depth = texture2D(uDepth, coord).r;\n    float range = uDOFPosition - depth;\n    float scale = abs(range);\n\n    vec4 sample = texture2D(uColor, coord);\n    float count = 1.0;\n    for(int i = 0; i < 64; i++) {\n        vec2 p = samples[i];\n        p = coord + scale * 64.0 * strength * p * invRes;\n        float d = texture2D(uDepth, p).r;\n        float r = uDOFPosition - d;\n        float s = abs(r);\n        sample += texture2D(uColor, p) * s;\n        count += s;\n    }\n\n    gl_FragColor = sample/count;\n}",Be=(ve={atoms:Ae,bonds:we},_defineProperty(ve,"bonds",we),_defineProperty(ve,"texturedquad",Ue),_defineProperty(ve,"accumulator",ze),_defineProperty(ve,"ao",Te),_defineProperty(ve,"fxaa",Ee),_defineProperty(ve,"dof",Pe),ve),Ce=-1,Ne=1,Le=[Ce,Ce,Ce,Ce,Ce,Ne,Ce,Ne,Ne,Ce,Ce,Ce,Ce,Ne,Ne,Ce,Ne,Ce,Ne,Ce,Ne,Ne,Ce,Ce,Ne,Ne,Ce,Ne,Ce,Ne,Ne,Ne,Ce,Ne,Ne,Ne,Ce,Ce,Ce,Ne,Ce,Ce,Ne,Ce,Ne,Ce,Ce,Ce,Ne,Ce,Ne,Ce,Ce,Ne,Ce,Ne,Ne,Ne,Ne,Ne,Ne,Ne,Ce,Ce,Ne,Ne,Ne,Ne,Ce,Ce,Ne,Ce,Ne,Ce,Ce,Ce,Ce,Ce,Ce,Ne,Ce,Ne,Ce,Ce,Ce,Ne,Ce,Ne,Ne,Ce,Ce,Ce,Ne,Ne,Ce,Ne,Ne,Ne,Ne,Ce,Ce,Ne,Ne,Ne,Ne,Ce,Ne,Ne],Oe={Xx:{symbol:"Xx",name:"unknown",mass:1,radius:1,color:[1,.078,.576],number:0},H:{symbol:"H",name:"hydrogen",mass:1.00794,radius:.31,color:[1,1,1],number:1},He:{symbol:"He",name:"helium",mass:4.002602,radius:.28,color:[.851,1,1],number:2},Li:{symbol:"Li",name:"lithium",mass:6.941,radius:1.28,color:[.8,.502,1],number:3},Be:{symbol:"Be",name:"beryllium",mass:9.012182,radius:.96,color:[.761,1,0],number:4},B:{symbol:"B",name:"boron",mass:10.811,radius:.84,color:[1,.71,.71],number:5},C:{symbol:"C",name:"carbon",mass:12.0107,radius:.73,color:[.565,.565,.565],number:6},N:{symbol:"N",name:"nitrogen",mass:14.0067,radius:.71,color:[.188,.314,.973],number:7},O:{symbol:"O",name:"oxygen",mass:15.9994,radius:.66,color:[1,.051,.051],number:8},F:{symbol:"F",name:"fluorine",mass:18.9984032,radius:.57,color:[.565,.878,.314],number:9},Ne:{symbol:"Ne",name:"neon",mass:20.1797,radius:.58,color:[.702,.89,.961],number:10},Na:{symbol:"Na",name:"sodium",mass:22.98976928,radius:1.66,color:[.671,.361,.949],number:11},Mg:{symbol:"Mg",name:"magnesium",mass:24.305,radius:1.41,color:[.541,1,0],number:12},Al:{symbol:"Al",name:"aluminum",mass:26.9815386,radius:1.21,color:[.749,.651,.651],number:13},Si:{symbol:"Si",name:"silicon",mass:28.0855,radius:1.11,color:[.941,.784,.627],number:14},P:{symbol:"P",name:"phosphorus",mass:30.973762,radius:1.07,color:[1,.502,0],number:15},S:{symbol:"S",name:"sulfur",mass:32.065,radius:1.05,color:[1,1,.188],number:16},Cl:{symbol:"Cl",name:"chlorine",mass:35.453,radius:1.02,color:[.122,.941,.122],number:17},Ar:{symbol:"Ar",name:"argon",mass:39.948,radius:1.06,color:[.502,.82,.89],number:18},K:{symbol:"K",name:"potassium",mass:39.0983,radius:2.03,color:[.561,.251,.831],number:19},Ca:{symbol:"Ca",name:"calcium",mass:40.078,radius:1.76,color:[.239,1,0],number:20},Sc:{symbol:"Sc",name:"scandium",mass:44.955912,radius:1.7,color:[.902,.902,.902],number:21},Ti:{symbol:"Ti",name:"titanium",mass:47.867,radius:1.6,color:[.749,.761,.78],number:22},V:{symbol:"V",name:"vanadium",mass:50.9415,radius:1.53,color:[.651,.651,.671],number:23},Cr:{symbol:"Cr",name:"chromium",mass:51.9961,radius:1.39,color:[.541,.6,.78],number:24},Mn:{symbol:"Mn",name:"manganese",mass:54.938045,radius:1.39,color:[.611,.478,.78],number:25},Fe:{symbol:"Fe",name:"iron",mass:55.845,radius:1.32,color:[.878,.4,.2],number:26},Co:{symbol:"Co",name:"cobalt",mass:58.6934,radius:1.26,color:[.941,.565,.627],number:27},Ni:{symbol:"Ni",name:"nickel",mass:58.933195,radius:1.24,color:[.314,.816,.314],number:28},Cu:{symbol:"Cu",name:"copper",mass:63.546,radius:1.32,color:[.784,.502,.2],number:29},Zn:{symbol:"Zn",name:"zinc",mass:65.38,radius:1.22,color:[.49,.502,.69],number:30},Ga:{symbol:"Ga",name:"gallium",mass:69.723,radius:1.22,color:[.761,.561,.561],number:31},Ge:{symbol:"Ge",name:"germanium",mass:72.64,radius:1.2,color:[.4,.561,.561],number:32},As:{symbol:"As",name:"arsenic",mass:74.9216,radius:1.19,color:[.741,.502,.89],number:33},Se:{symbol:"Se",name:"selenium",mass:78.96,radius:1.2,color:[1,.631,0],number:34},Br:{symbol:"Br",name:"bromine",mass:79.904,radius:1.2,color:[.651,.161,.161],number:35},Kr:{symbol:"Kr",name:"krypton",mass:83.798,radius:1.16,color:[.361,.722,.82],number:36},Rb:{symbol:"Rb",name:"rubidium",mass:85.4678,radius:2.2,color:[.439,.18,.69],number:37},Sr:{symbol:"Sr",name:"strontium",mass:87.62,radius:1.95,color:[0,1,0],number:38},Y:{symbol:"Y",name:"yttrium",mass:88.90585,radius:1.9,color:[.58,1,1],number:39},Zr:{symbol:"Zr",name:"zirconium",mass:91.224,radius:1.75,color:[.58,.878,.878],number:40},Nb:{symbol:"Nb",name:"niobium",mass:92.90638,radius:1.64,color:[.451,.761,.788],number:41},Mo:{symbol:"Mo",name:"molybdenum",mass:95.96,radius:1.54,color:[.329,.71,.71],number:42},Tc:{symbol:"Tc",name:"technetium",mass:98,radius:1.47,color:[.231,.62,.62],number:43},Ru:{symbol:"Ru",name:"ruthenium",mass:101.07,radius:1.46,color:[.141,.561,.561],number:44},Rh:{symbol:"Rh",name:"rhodium",mass:102.9055,radius:1.42,color:[.039,.49,.549],number:45},Pd:{symbol:"Pd",name:"palladium",mass:106.42,radius:1.39,color:[0,.412,.522],number:46},Ag:{symbol:"Ag",name:"silver",mass:107.8682,radius:1.45,color:[.753,.753,.753],number:47},Cd:{symbol:"Cd",name:"cadmium",mass:112.411,radius:1.44,color:[1,.851,.561],number:48},In:{symbol:"In",name:"indium",mass:114.818,radius:1.42,color:[.651,.459,.451],number:49},Sn:{symbol:"Sn",name:"tin",mass:118.71,radius:1.39,color:[.4,.502,.502],number:50},Sb:{symbol:"Sb",name:"antimony",mass:121.76,radius:1.39,color:[.62,.388,.71],number:51},Te:{symbol:"Te",name:"tellurium",mass:127.6,radius:1.38,color:[.831,.478,0],number:52},I:{symbol:"I",name:"iodine",mass:126.9047,radius:1.39,color:[.58,0,.58],number:53},Xe:{symbol:"Xe",name:"xenon",mass:131.293,radius:1.4,color:[.259,.62,.69],number:54},Cs:{symbol:"Cs",name:"cesium",mass:132.9054519,radius:2.44,color:[.341,.09,.561],number:55},Ba:{symbol:"Ba",name:"barium",mass:137.327,radius:2.15,color:[0,.788,0],number:56},La:{symbol:"La",name:"lanthanum",mass:138.90547,radius:2.07,color:[.439,.831,1],number:57},Ce:{symbol:"Ce",name:"cerium",mass:140.116,radius:2.04,color:[1,1,.78],number:58},Pr:{symbol:"Pr",name:"praseodymium",mass:140.90765,radius:2.03,color:[.851,1,.78],number:59},Nd:{symbol:"Nd",name:"neodymium",mass:144.242,radius:2.01,color:[.78,1,.78],number:60},Pm:{symbol:"Pm",name:"promethium",mass:145,radius:1.99,color:[.639,1,.78],number:61},Sm:{symbol:"Sm",name:"samarium",mass:150.36,radius:1.98,color:[.561,1,.78],number:62},Eu:{symbol:"Eu",name:"europium",mass:151.964,radius:1.98,color:[.38,1,.78],number:63},Gd:{symbol:"Gd",name:"gadolinium",mass:157.25,radius:1.96,color:[.271,1,.78],number:64},Tb:{symbol:"Tb",name:"terbium",mass:158.92535,radius:1.94,color:[.189,1,.78],number:65},Dy:{symbol:"Dy",name:"dysprosium",mass:162.5,radius:1.92,color:[.122,1,.78],number:66},Ho:{symbol:"Ho",name:"holmium",mass:164.93032,radius:1.92,color:[0,1,.612],number:67},Er:{symbol:"Er",name:"erbium",mass:167.259,radius:1.89,color:[0,.902,.459],number:68},Tm:{symbol:"Tm",name:"thulium",mass:168.93421,radius:1.9,color:[0,.831,.322],number:69},Yb:{symbol:"Yb",name:"ytterbium",mass:173.054,radius:1.87,color:[0,.749,.22],number:70},Lu:{symbol:"Lu",name:"lutetium",mass:174.9668,radius:1.87,color:[0,.671,.141],number:71},Hf:{symbol:"Hf",name:"hafnium",mass:178.49,radius:1.75,color:[.302,.761,1],number:72},Ta:{symbol:"Ta",name:"tantalum",mass:180.94788,radius:1.7,color:[.302,.651,1],number:73},W:{symbol:"W",name:"tungsten",mass:183.84,radius:1.62,color:[.129,.58,.839],number:74},Re:{symbol:"Re",name:"rhenium",mass:186.207,radius:1.51,color:[.149,.49,.671],number:75},Os:{symbol:"Os",name:"osmium",mass:190.23,radius:1.44,color:[.149,.4,.588],number:76},Ir:{symbol:"Ir",name:"iridium",mass:192.217,radius:1.41,color:[.09,.329,.529],number:77},Pt:{symbol:"Pt",name:"platinum",mass:195.084,radius:1.36,color:[.816,.816,.878],number:78},Au:{symbol:"Au",name:"gold",mass:196.966569,radius:1.36,color:[1,.82,.137],number:79},Hg:{symbol:"Hg",name:"mercury",mass:200.59,radius:1.32,color:[.722,.722,.816],number:80},Tl:{symbol:"Tl",name:"thallium",mass:204.3833,radius:1.45,color:[.651,.329,.302],number:81},Pb:{symbol:"Pb",name:"lead",mass:207.2,radius:1.46,color:[.341,.349,.38],number:82},Bi:{symbol:"Bi",name:"bismuth",mass:208.9804,radius:1.48,color:[.62,.31,.71],number:83},Po:{symbol:"Po",name:"polonium",mass:210,radius:1.4,color:[.671,.361,0],number:84},At:{symbol:"At",name:"astatine",mass:210,radius:1.5,color:[.459,.31,.271],number:85},Rn:{symbol:"Rn",name:"radon",mass:220,radius:1.5,color:[.259,.51,.588],number:86},Fr:{symbol:"Fr",name:"francium",mass:223,radius:2.6,color:[.259,0,.4],number:87},Ra:{symbol:"Ra",name:"radium",mass:226,radius:2.21,color:[0,.49,0],number:88},Ac:{symbol:"Ac",name:"actinium",mass:227,radius:2.15,color:[.439,.671,.98],number:89},Th:{symbol:"Th",name:"thorium",mass:231.03588,radius:2.06,color:[0,.729,1],number:90},Pa:{symbol:"Pa",name:"protactinium",mass:232.03806,radius:2,color:[0,.631,1],number:91},U:{symbol:"U",name:"uranium",mass:237,radius:1.96,color:[0,.561,1],number:92},Np:{symbol:"Np",name:"neptunium",mass:238.02891,radius:1.9,color:[0,.502,1],number:93},Pu:{symbol:"Pu",name:"plutonium",mass:243,radius:1.87,color:[0,.42,1],number:94},Am:{symbol:"Am",name:"americium",mass:244,radius:1.8,color:[.329,.361,.949],number:95},Cm:{symbol:"Cm",name:"curium",mass:247,radius:1.69,color:[.471,.361,.89],number:96},Bk:{symbol:"Bk",name:"berkelium",mass:247,radius:1.66,color:[.541,.31,.89],number:97},Cf:{symbol:"Cf",name:"californium",mass:251,radius:1.68,color:[.631,.212,.831],number:98},Es:{symbol:"Es",name:"einsteinium",mass:252,radius:1.65,color:[.702,.122,.831],number:99},Fm:{symbol:"Fm",name:"fermium",mass:257,radius:1.67,color:[.702,.122,.729],number:100},Md:{symbol:"Md",name:"mendelevium",mass:258,radius:1.73,color:[.702,.051,.651],number:101},No:{symbol:"No",name:"nobelium",mass:259,radius:1.76,color:[.741,.051,.529],number:102},Lr:{symbol:"Lr",name:"lawrencium",mass:262,radius:1.61,color:[.78,0,.4],number:103},Rf:{symbol:"Rf",name:"rutherfordium",mass:261,radius:1.57,color:[.8,0,.349],number:104},Db:{symbol:"Db",name:"dubnium",mass:262,radius:1.49,color:[.82,0,.31],number:105},Sg:{symbol:"Sg",name:"seaborgium",mass:266,radius:1.43,color:[.851,0,.271],number:106},Bh:{symbol:"Bh",name:"bohrium",mass:264,radius:1.41,color:[.878,0,.22],number:107},Hs:{symbol:"Hs",name:"hassium",mass:277,radius:1.34,color:[.902,0,.18],number:108},Mt:{symbol:"Mt",name:"meitnerium",mass:268,radius:1.29,color:[.922,0,.149],number:109},Ds:{symbol:"Ds",name:"Ds",mass:271,radius:1.28,color:[.922,0,.149],number:110},Uuu:{symbol:"Uuu",name:"Uuu",mass:272,radius:1.21,color:[.922,0,.149],number:111},Uub:{symbol:"Uub",name:"Uub",mass:285,radius:1.22,color:[.922,0,.149],number:112},Uut:{symbol:"Uut",name:"Uut",mass:284,radius:1.36,color:[.922,0,.149],number:113},Uuq:{symbol:"Uuq",name:"Uuq",mass:289,radius:1.43,color:[.922,0,.149],number:114},Uup:{symbol:"Uup",name:"Uup",mass:288,radius:1.62,color:[.922,0,.149],number:115},Uuh:{symbol:"Uuh",name:"Uuh",mass:292,radius:1.75,color:[.922,0,.149],number:116},Uus:{symbol:"Uus",name:"Uus",mass:294,radius:1.65,color:[.922,0,.149],number:117},Uuo:{symbol:"Uuo",name:"Uuo",mass:296,radius:1.57,color:[.922,0,.149],number:118}},Xe=1/0,He=-(1/0);for(var We in Oe)Oe.hasOwnProperty(We)&&(Xe=Math.min(Xe,Oe[We].radius),He=Math.max(He,Oe[We].radius));var qe=Object.create(HTMLElement.prototype);qe.createdCallback=function(){this.style.display="inline-block";var e=this.createShadowRoot(),t=Math.min(this.clientWidth,this.clientHeight);t<100&&(t=100);var o=document.createElement("canvas");o.width=t,o.height=t,o.style.cssText="position: absolute; margin: auto; top: 0; left: 0; right: 0; bottom: 0;",e.appendChild(o),this._view=j(),this._view.resolution=t,this._state={needReset:!1,lastX:0,lastY:0,buttonDown:!1},de(this),this._renderer=new me(o,this._view.resolution,this._view.aoRes),this._renderer.setResolution(this._view.resolution,this._view.aoRes),this._system=oe(),this.hasAttribute("lattice")?this._view.lattice=!0:this._view.lattice=!1,this.hasAttribute("bonds")?(this._view.bonds=!0,this._view=q(this._view,Re.atomsbonds)):this._view.bonds=!1,J(this._view),this.hasAttribute("src")&&this.readStructure(this.getAttribute("src"),this.getAttribute("format"))},qe.readStructure=function(e,t){var o=e.split(".").slice(-1)[0];if(t&&["xyz"].indexOf(t)>=0)o=t;else if(t)throw"Unrecognized structure format: "+t;var n=this;if("xyz"!==o)throw"Unrecognized filename extension for src!";G(e,function(e){var t=B(e)[0];n.loadStructure({atoms:t})},function(){throw"Unable to load file from url"})},qe.loadStructure=function(e){this._system=oe();for(var t=1/0,o=1/0,n=1/0,a=-(1/0),r=-(1/0),s=-(1/0),i=0;i<e.atoms.length;i++){var l=e.atoms[i],u=l.position[0],m=l.position[1],c=l.position[2];u<t&&(t=u),m<o&&(o=m),c<n&&(n=c),u>a&&(a=u),m>r&&(r=m),c>s&&(s=c),re(this._system,l.symbol,u,m,c)}if(e.lattice){var f=e.lattice;this._system.lattice.matrix=d(f[0],f[1],f[2],0,f[3],f[4],f[5],0,f[6],f[7],f[8],0,0,0,0,1)}else this._system.lattice.matrix=d(a-t,0,0,t,0,r-o,0,o,0,0,s-n,n,0,0,0,1);ie(this._system),this._view.lattice&&ne(this._system),this._view.bonds&&ae(this._system),this._renderer.setSystem(this._system,this._view),Y(this._view,this._system),this._state.needReset=!0,fe(this)},qe.attributeChangedCallback=function(e,t,o){"bonds"===e?(this.hasAttribute("bonds")?(ae(this._system),this._view.bonds=!0,this._view=q(this._view,Re.atomsbonds)):(this._view.bonds=!1,this._view=q(this._view,Re.atoms)),J(this._view),this._renderer.setSystem(this._system,this._view),this._state.needReset=!0):"lattice"===e?(this.hasAttribute("lattice")?(ne(this._system),this._view.lattice=!0):this._view.lattice=!1,J(this._view),this._renderer.setSystem(this._system,this._view),this._state.needReset=!0):"src"===e&&this.hasAttribute("src")&&this.readStructure(this.getAttribute("src"),this.getAttribute("format"))};document.registerElement("structure-view",{prototype:qe})});